<?xml version="1.0" encoding="UTF-8"?>
<project name="service-dataapi-xml-adapter" xmlns:if="ant:if" xmlns:unless="ant:unless" default="usage" basedir=".">

    <property name="build.dir" value="${basedir}/build"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.build.dir" value="${basedir}/build/test"/>
    <property name="test.src.dir" value="${basedir}/test"/>
    <property file="${basedir}/nbproject/project.properties" />
    <property name="jar.file.name" value="${dist.dir}/${ant.project.name}.jar"/>
    
    <target name="usage">
        <echo>ant [target]</echo>
        <echo>Targets:</echo>
        <echo>  clean     - cleaning all generated artifacts</echo>
        <echo>  jar       - compile jar file</echo>
        <echo>  -------------------------- </echo>
        <echo>  run       - run application </echo>
        <echo>  service   - run as service </echo>
        <echo>  stop      - stop service  </echo>
        <echo>  -------------------------- </echo>
        <echo>  test      - run tests</echo>
        
        
    </target>          
    
    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/lib"/>
        <copy todir="${dist.dir}/lib" flatten="true">
            <path path="${javac.classpath}"/>
        </copy>
        
        <manifestclasspath property="manifest.classpath" jarfile="${jar.file.name}">
            <classpath>
                <fileset dir="${dist.dir}/lib" includes="*.jar"/>            
            </classpath>
        </manifestclasspath>

        <copy todir="${build.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java"/>
        </copy>

        <jar jarfile="${jar.file.name}">
            <fileset dir="${build.dir}" />
            <manifest>
                <attribute name="Class-Path" value="${manifest.classpath}" />
                <attribute name="Main-Class" value="ua.visicom.Bootstrap"/>
            </manifest>
        </jar>
    </target>

    <target name="compile" description="compile java code">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" 
               destdir="${build.dir}" 
               debug="true" 
               failonerror="true" 
               nowarn="true"
               classpath="${javac.classpath}"/>
    </target>
    
    
    <target name="clean">
        <delete dir="${dist.dir}" />
        <delete dir="${build.dir}" />
	<delete dir="${basedir}/.vertx" />
	<delete dir="${basedir}/file-uploads" />
	<delete dir="${basedir}/logs" />
    </target>

        
    <target name="test" depends="jar">
        <path id="classpath.test">
          <pathelement location="lib/test/junit-4.12.jar"/>
          <pathelement location="lib/test/hamcrest-core-1.3.jar"/>
          <pathelement location="${dist.dir}/${ant.project.name}.jar"/>
        </path>        
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>       
        <junit printsummary="on" haltonfailure="yes" fork="true">
               <classpath>
                 <path refid="classpath.test"/>
                 <pathelement location="${test.build.dir}"/>
               </classpath>
               <formatter type="brief" usefile="false" />
               <batchtest>
                   <fileset dir="${test.src.dir}" includes="**/*Test.java" />
               </batchtest>
        </junit>          
    </target>


    <target name="run" depends="jar">
        <java dir="${dist.dir}" jar="${dist.dir}/${ant.project.name}.jar" fork="true"/>
    </target>
        
    <target name="service" depends="jar">
        <exec dir="${lib.dir}" executable="${lib.dir}/nssm64.exe" outputproperty="out">
            <arg line='install "visicom.wa.g1.service.dataapi-xml.adapter" java -Xmx512m -Xms128m -Dfile.encoding=utf-8 -jar ${jar.file.name}'/>
        </exec>
        <exec dir="${basedir}" executable="${lib.dir}/nssm64.exe" outputproperty="out">
                <arg line='set "visicom.wa.g1.service.dataapi-xml.adapter" AppDirectory ${dist.dir}'/>
        </exec>
        
        <exec dir="${lib.dir}" executable="${lib.dir}/nssm64.exe" outputproperty="out">
            <arg line='set "visicom.wa.g1.service.dataapi-xml.adapter" Description "visicom.wa.g1.service.xml-dataapi.adapter"'/>
        </exec>
        
        <exec dir="${lib.dir}" executable="${lib.dir}/nssm64.exe" outputproperty="out">
            <arg line='set "visicom.wa.g1.service.dataapi-xml.adapter" AppExit 1 Exit'/>
        </exec>

        <exec dir="${lib.dir}" executable="${lib.dir}/nssm64.exe" resultproperty="result" outputproperty="out">
            <arg line='start "visicom.wa.g1.service.dataapi-xml.adapter"'/>
        </exec>
        

        <echoresult result="${result}" 
                    success="Service 'visicom.wa.g1.service.dataapi-xml.adapter' INSTALLED SUCCESSFULLY!"
                    error="${out}"/>
    </target>
    
    <target name="stop">
        <exec dir="${lib.dir}" executable="${lib.dir}/nssm64.exe" outputproperty="out">
            <arg line='stop "visicom.wa.g1.service.dataapi-xml.adapter"'/>
        </exec>
        <exec dir="${lib.dir}" executable="${lib.dir}/nssm64.exe" resultproperty="result" outputproperty="out">
            <arg line='remove "visicom.wa.g1.service.dataapi-xml.adapter" confirm'/>
        </exec>
        <echoresult result="${result}" 
                    success="Service 'visicom.wa.g1.service.dataapi-xml.adapter' removed successfully!!"
                    error="${out}"/>
    </target>

   
    <macrodef name="echoresult">
       <attribute name="result"/>
       <attribute name="success"/>
       <attribute name="error"/>
       <sequential>
            <condition property="is_ok">
                <equals arg1="@{result}" arg2="0"/>
            </condition>
            <echo if:set="is_ok">@{success}</echo>
            <echo unless:set="is_ok">@{error}</echo>
       </sequential>
    </macrodef>

</project>
